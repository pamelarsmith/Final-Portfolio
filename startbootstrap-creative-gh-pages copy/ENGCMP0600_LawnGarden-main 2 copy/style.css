body, html {
  height: 100%;
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  background-color: dimgrey;
}

.header {
  background-color: #f1f1f1;
  padding: 20px;
  text-align: center;
}

 /* Top Navigation */
.topnav {
  overflow: hidden;
  background-color: #333;
}
.topnav a {
  float: left;
  display: block;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
}
.topnav a:hover {
  background-color: #ddd;
  color: black;
}

/* Hero Image Stuff */
.hero-image {
background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("images/tomatoes.jpg");
  height: 100%;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

/* Places text in the middle of the image */

.hero-text {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 250%;
}

.hero-text h2 p {   /* This section adds the text stylings for your hero block */
  display: block;
    font-size: 0.67em;
    margin-block-start: 2.33em;
    margin-block-end: 2.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
}

/*  - PARALLAX -
This code controls that cool parallax image and scrolling effect. Change the image "fuego.jpg" below to match your asset.*/
/*You can always add more parllax assets on your web document, just follow the directions at the bottom of the index.html.*/
.parallax-1 {
  background-image: url("fuego.jpg");

  /* Set a specific height */
  height: 500px;

  /* control the parallax scrolling effect */
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

/*   This code stops the parallax image and scrolling effect for small screens--at the moment, Iphones just don't it.*/
@media screen and (max-width: 768px) {
	.parallax-1 {
		background-attachment: inherit;
	}
}



/* Preset Image Controls
This section of css. helps organize images to position and center the image to scale nicely on all screens */

.center-image {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}


.bar {
  display: flex;
  flex-wrap: wrap;
  padding: 0 4px;
  justify-content: center;
  /* background-color: black; */
}
.bar-left {
  margin: 5px;
  width: 25%;
  min-height: 50%;
  background-color: blue;

  align-content: center;
}
.bar-left h2 {
    display: block;
    font-size: 0.67em;
    margin-block-start: 2.33em;
    margin-block-end: 2.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
}
.bar-right {
  margin: 5px;
  width: 70%;
  min-height: 50%;
}
.bar-right img {
  max-width: 100%;
}
/* -Preset Photo Grid -
The following .css is responsible for your photo grid .row, .column, .column img and @ media all work together to create your responsive image displays. Change the images on index.html. Remember, the images need to be in your project file folder */

.row {
  display: flex;
  flex-wrap: wrap;
  padding: 0 4px;
  justify-content: center;
}

/* Create 3 equal columns that sit next to each other */
.column {
  flex: 25%;
  padding: 20px 20px;
  justify-content: center;
}

.column img {
  margin: 10px 10px;
  vertical-align: middle;
  width: 100%;
}


/* Responsive layout - makes grid a one column-layout instead of two or three columns */
@media screen and (max-width: 800px) {
  .column {
    flex: 50%;
    max-width: 50%;
}
}


/* - Preset Text Block Controls-
this css. element centers text elements*/


/* This css. section controls the paragraph chunks*/

@media screen and (min-width: 800px) {
.textblock {
  margin: auto;
  width: 50%;
  padding: 100px;
    font-size: 125%;
}
}

@media screen and (max-width: 800px) {
  .textblock {
    margin: auto;
    padding: 20px;
}
}


/* Flex box 2 column controls */
  * {
  box-sizing: border-box;
}

.flex-container {
  display: flex;
  flex-direction: row;
  font-size: 30px;
  color: white;
  text-align: left;

}

.flex-item-left {
  background-color: black;
  padding: 10px;
  flex: 50%;
}

.flex-item-right {
  background-color: black;
  padding: 10px;
  flex: 50%;
}

.flex-img {
  width: 100px;
  height: 100px;

}

/* Responsive layout - makes a one column-layout instead of two-column layout */
@media (max-width: 800px) {
  .flex-container {
    flex-direction: column;
  }
}

.button-box {
  padding: 5px;
  margin: 10px;
  width: 100%;
  height: 100%;
  background-color: #0f2310;
}

.button-box p {
  position: relative;
  top: 40%;
}

.parent {
  position: relative;
}

.child {
  position: absolute;
}

.content-container {
  width: 80%;
  background-color: green;
}

.page {
  width: 100%;
  height: 100%;
}

.page-title {
    text-align: center;
    position: absolute;
    top: 10vh;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 250%;
}
.page-title h2 p {   /* This section adds the text stylings for your hero block */
  display: block;
    font-size: 0.67em;
    margin-block-start: 2.33em;
    margin-block-end: 2.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
}
.page-content {
  padding: 30px;

  position: absolute;
  width: 70%;
  height: 80%;

  left: 50%;
  top: 20vh;
  transform: translate(-50%);
  background-color:  black;
}
.page-content * {
  color: white;
}
a {
    color: white;
    text-decoration: none;
}

a:hover {
    color:#00A0C6;
    text-decoration:none;
    cursor:pointer;
}
